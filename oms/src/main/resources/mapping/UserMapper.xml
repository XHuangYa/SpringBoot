<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bakery.application.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.bakery.application.entity.User">
        <id column="USER_ID" property="userId" jdbcType="VARCHAR"/>
        <result column="ID" property="id" jdbcType="INTEGER"/>
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR"/>
        <result column="USER_PHONE" property="userPhone" jdbcType="VARCHAR"/>
        <result column="SEX" property="sex" jdbcType="INTEGER"/>
        <result column="STATUS" property="status" jdbcType="INTEGER"/>
        <result column="CREATE_TIME" property="createTime" jdbcType="DATE"/>
        <result column="UPDATE_TIME" property="updateTime" jdbcType="DATE"/>
        <result column="REMARK" property="remark" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    USER_ID, ID, USER_NAME, USER_PHONE, SEX, STATUS, CREATE_TIME, UPDATE_TIME, REMARK
  </sql>
    <select id="queryByExample" parameterType="com.bakery.application.entity.UserCriteria"
            resultType="com.bakery.application.entity.User">
        SELECT
        USER_ID userId,
        USER_NAME userName,
        USER_PHONE userPhone,
        (CASE
        WHEN SEX = 0 THEN
        '男'
        WHEN SEX = 1 THEN
        '女'
        END) sexDes,
        STATUS status,
        CREATE_TIME createTime,
        UPDATE_TIME updateTime,
        REMARK remark
        FROM
        bky_user
        <where>
            <if test="userPhone != null and userPhone!=''">
                USER_PHONE= #{userPhone}
            </if>
            <if test="userName != null and userName!=''">
                and USER_NAME like '%${userName}%'
            </if>
            and STATUS=1
        </where>
        order by UPDATE_TIME desc
    </select>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bakery.application.entity.UserCriteria">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from bky_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from bky_user
        where USER_ID = #{userId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from bky_user
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.bakery.application.entity.UserCriteria">
        delete from bky_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.bakery.application.entity.User">
    insert into bky_user (USER_ID, ID, USER_NAME, 
      USER_PHONE, SEX, STATUS, 
      CREATE_TIME, UPDATE_TIME, REMARK
      )
    values (#{userId,jdbcType=VARCHAR}, #{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{userPhone,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.bakery.application.entity.User">
        insert into bky_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                USER_ID,
            </if>
            <if test="id != null">
                ID,
            </if>
            <if test="userName != null">
                USER_NAME,
            </if>
            <if test="userPhone != null">
                USER_PHONE,
            </if>
            <if test="sex != null">
                SEX,
            </if>
            <if test="status != null">
                STATUS,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
            <if test="updateTime != null">
                UPDATE_TIME,
            </if>
            <if test="remark != null">
                REMARK,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPhone != null">
                #{userPhone,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=DATE},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=DATE},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.bakery.application.entity.UserCriteria"
            resultType="java.lang.Integer">
        select count(*) from bky_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update bky_user
        <set>
            <if test="record.userId != null">
                USER_ID = #{record.userId,jdbcType=VARCHAR},
            </if>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userName != null">
                USER_NAME = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.userPhone != null">
                USER_PHONE = #{record.userPhone,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null">
                SEX = #{record.sex,jdbcType=INTEGER},
            </if>
            <if test="record.status != null">
                STATUS = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                CREATE_TIME = #{record.createTime,jdbcType=DATE},
            </if>
            <if test="record.updateTime != null">
                UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
            </if>
            <if test="record.remark != null">
                REMARK = #{record.remark,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update bky_user
        set USER_ID = #{record.userId,jdbcType=VARCHAR},
        ID = #{record.id,jdbcType=INTEGER},
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
        USER_PHONE = #{record.userPhone,jdbcType=VARCHAR},
        SEX = #{record.sex,jdbcType=INTEGER},
        STATUS = #{record.status,jdbcType=INTEGER},
        CREATE_TIME = #{record.createTime,jdbcType=DATE},
        UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
        REMARK = #{record.remark,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.bakery.application.entity.User">
        update bky_user
        <set>
            <if test="id != null">
                ID = #{id,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                USER_NAME = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPhone != null">
                USER_PHONE = #{userPhone,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                SEX = #{sex,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                STATUS = #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                CREATE_TIME = #{createTime,jdbcType=DATE},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME = #{updateTime,jdbcType=DATE},
            </if>
            <if test="remark != null">
                REMARK = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where USER_ID = #{userId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bakery.application.entity.User">
    update bky_user
    set ID = #{id,jdbcType=INTEGER},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      USER_PHONE = #{userPhone,jdbcType=VARCHAR},
      SEX = #{sex,jdbcType=INTEGER},
      STATUS = #{status,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=DATE},
      UPDATE_TIME = #{updateTime,jdbcType=DATE},
      REMARK = #{remark,jdbcType=VARCHAR}
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>