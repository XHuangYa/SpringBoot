<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bakery.application.mapper.ProductMapper">
    <resultMap id="BaseResultMap" type="com.bakery.application.entity.Product">
        <id column="PDT_ID" property="pdtId" jdbcType="VARCHAR"/>
        <result column="ID" property="id" jdbcType="INTEGER"/>
        <result column="PDT_NAME" property="pdtName" jdbcType="VARCHAR"/>
        <result column="PDT_TYPE" property="pdtType" jdbcType="VARCHAR"/>
        <result column="UNIT_PRICE" property="unitPrice" jdbcType="VARCHAR"/>
        <result column="MEASER" property="measer" jdbcType="VARCHAR"/>
        <result column="STATUS" property="status" jdbcType="INTEGER"/>
        <result column="CREATE_TIME" property="createTime" jdbcType="DATE"/>
        <result column="UPDATE_TIME" property="updateTime" jdbcType="DATE"/>
        <result column="PICTURE" property="picture" jdbcType="VARCHAR"/>
        <result column="REMARK" property="remark" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    PDT_ID, ID, PDT_NAME, PDT_TYPE, UNIT_PRICE, MEASER, STATUS, CREATE_TIME, UPDATE_TIME, 
    PICTURE, REMARK
  </sql>
    <!--分页-->
    <select id="queryPdtByPage" parameterType="com.bakery.application.entity.Product" resultType="com.bakery.application.dto.ProductDTO">
        SELECT
        bp.PDT_ID pdtId,
        bp.PDT_NAME pdtName,
        bp.MEASER measer,
        bp.PDT_TYPE pdtType,
        bp.STATUS status,
        (
        SELECT
        bc.CODE_NAME
        FROM
        base_code bc
        WHERE
        bc.DATA_CODE = bp.PDT_TYPE
        AND bc.CODE_TYPE = 'PDT_TYPE'
        ) pdtTypeDes,
        (
        SELECT
        bc.CODE_NAME
        FROM
        base_code bc
        WHERE
        bc.DATA_CODE = bp. STATUS
        AND bc.CODE_TYPE = 'STATUS'
        ) statusDes,
        bp.UNIT_PRICE unitPrice,
        (
        SELECT
        bc.CODE_NAME
        FROM
        base_code bc
        WHERE
        bc.DATA_CODE = bp.MEASER
        AND bc.CODE_TYPE = 'MEASER'
        ) measerDes,
        bp.PICTURE picture,
        bp.CREATE_TIME createTime,
        bp.UPDATE_TIME updateTime,
        bp.REMARK
        FROM
        bky_pdt bp
        <where>
            <if test="pdtType != null and pdtType!=''">
                bp.PDT_TYPE= #{pdtType}
            </if>
            <if test="pdtName!=null and  pdtName!=''">
                AND bp.PDT_NAME like '%${pdtName}%'
            </if>
            and bp.status>=1
        </where>
    </select>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.bakery.application.entity.ProductCriteria">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from bky_pdt
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from bky_pdt
        where PDT_ID = #{pdtId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from bky_pdt
    where PDT_ID = #{pdtId,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.bakery.application.entity.ProductCriteria">
        delete from bky_pdt
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.bakery.application.entity.Product">
    insert into bky_pdt (PDT_ID, ID, PDT_NAME, 
      PDT_TYPE, UNIT_PRICE, MEASER, 
      STATUS, CREATE_TIME, UPDATE_TIME, 
      PICTURE, REMARK)
    values (#{pdtId,jdbcType=VARCHAR}, #{id,jdbcType=INTEGER}, #{pdtName,jdbcType=VARCHAR}, 
      #{pdtType,jdbcType=VARCHAR}, #{unitPrice,jdbcType=VARCHAR}, #{measer,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE}, 
      #{picture,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.bakery.application.entity.Product">
        insert into bky_pdt
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pdtId != null">
                PDT_ID,
            </if>
            <if test="id != null">
                ID,
            </if>
            <if test="pdtName != null">
                PDT_NAME,
            </if>
            <if test="pdtType != null">
                PDT_TYPE,
            </if>
            <if test="unitPrice != null">
                UNIT_PRICE,
            </if>
            <if test="measer != null">
                MEASER,
            </if>
            <if test="status != null">
                STATUS,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
            <if test="updateTime != null">
                UPDATE_TIME,
            </if>
            <if test="picture != null">
                PICTURE,
            </if>
            <if test="remark != null">
                REMARK,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pdtId != null">
                #{pdtId,jdbcType=VARCHAR},
            </if>
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="pdtName != null">
                #{pdtName,jdbcType=VARCHAR},
            </if>
            <if test="pdtType != null">
                #{pdtType,jdbcType=VARCHAR},
            </if>
            <if test="unitPrice != null">
                #{unitPrice,jdbcType=VARCHAR},
            </if>
            <if test="measer != null">
                #{measer,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=DATE},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=DATE},
            </if>
            <if test="picture != null">
                #{picture,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.bakery.application.entity.ProductCriteria"
            resultType="java.lang.Integer">
        select count(*) from bky_pdt
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update bky_pdt
        <set>
            <if test="record.pdtId != null">
                PDT_ID = #{record.pdtId,jdbcType=VARCHAR},
            </if>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.pdtName != null">
                PDT_NAME = #{record.pdtName,jdbcType=VARCHAR},
            </if>
            <if test="record.pdtType != null">
                PDT_TYPE = #{record.pdtType,jdbcType=VARCHAR},
            </if>
            <if test="record.unitPrice != null">
                UNIT_PRICE = #{record.unitPrice,jdbcType=VARCHAR},
            </if>
            <if test="record.measer != null">
                MEASER = #{record.measer,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                STATUS = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                CREATE_TIME = #{record.createTime,jdbcType=DATE},
            </if>
            <if test="record.updateTime != null">
                UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
            </if>
            <if test="record.picture != null">
                PICTURE = #{record.picture,jdbcType=VARCHAR},
            </if>
            <if test="record.remark != null">
                REMARK = #{record.remark,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update bky_pdt
        set PDT_ID = #{record.pdtId,jdbcType=VARCHAR},
        ID = #{record.id,jdbcType=INTEGER},
        PDT_NAME = #{record.pdtName,jdbcType=VARCHAR},
        PDT_TYPE = #{record.pdtType,jdbcType=VARCHAR},
        UNIT_PRICE = #{record.unitPrice,jdbcType=VARCHAR},
        MEASER = #{record.measer,jdbcType=VARCHAR},
        STATUS = #{record.status,jdbcType=INTEGER},
        CREATE_TIME = #{record.createTime,jdbcType=DATE},
        UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
        PICTURE = #{record.picture,jdbcType=VARCHAR},
        REMARK = #{record.remark,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.bakery.application.entity.Product">
        update bky_pdt
        <set>
            <if test="id != null">
                ID = #{id,jdbcType=INTEGER},
            </if>
            <if test="pdtName != null">
                PDT_NAME = #{pdtName,jdbcType=VARCHAR},
            </if>
            <if test="pdtType != null">
                PDT_TYPE = #{pdtType,jdbcType=VARCHAR},
            </if>
            <if test="unitPrice != null">
                UNIT_PRICE = #{unitPrice,jdbcType=VARCHAR},
            </if>
            <if test="measer != null">
                MEASER = #{measer,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                STATUS = #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                CREATE_TIME = #{createTime,jdbcType=DATE},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME = #{updateTime,jdbcType=DATE},
            </if>
            <if test="picture != null">
                PICTURE = #{picture,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                REMARK = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where PDT_ID = #{pdtId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bakery.application.entity.Product">
    update bky_pdt
    set ID = #{id,jdbcType=INTEGER},
      PDT_NAME = #{pdtName,jdbcType=VARCHAR},
      PDT_TYPE = #{pdtType,jdbcType=VARCHAR},
      UNIT_PRICE = #{unitPrice,jdbcType=VARCHAR},
      MEASER = #{measer,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=DATE},
      UPDATE_TIME = #{updateTime,jdbcType=DATE},
      PICTURE = #{picture,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR}
    where PDT_ID = #{pdtId,jdbcType=VARCHAR}
  </update>
    <select id="countByBaseCode" parameterType="com.bakery.application.dto.BaseCodeDTO" resultType="java.lang.Integer">
  select  count(p.PDT_TYPE) from bky_pdt p
  INNER JOIN base_code b on p.PDT_TYPE=b.DATA_CODE
  where  PDT_TYPE=#{pdtType,jdbcType=VARCHAR}   AND CODE_TYPE=#{codeType,jdbcType=VARCHAR}  AND b.`STATUS`='1'
  </select>
</mapper>